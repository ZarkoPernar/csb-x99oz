{"version":3,"sources":["App.js","index.js"],"names":["App","useState","contract","setContract","totalSupply","setTotalSupply","useMetamask","metaConnect","connect","metaState","Web3","console","log","mint","a","account","methods","send","type","value","utils","toWei","from","once","val","res","useEffect","isAvailable","isConnected","c","web3","eth","Contract","ABI","call","run","className","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0gNAMe,SAASA,IACtB,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,qBAAtC,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA4CC,wBAA3BC,EAAjB,EAAQC,QAAsBC,EAA9B,EAA8BA,UACxBD,EAAU,WACdD,EAAYG,MAEdC,QAAQC,IAAIH,GACZ,IAAMI,EAAI,uCAAG,4BAAAC,EAAA,sEAETH,QAAQC,IAAIH,EAAUM,QAAQ,IAFrB,SAGSb,EAASc,QACxBH,KAAK,GACLI,KAAK,CACJC,KAAM,MACNC,MAAOT,IAAKU,MAAMC,MAAM,OAAQ,SAChCC,KAAMb,EAAUM,QAAQ,KAEzBQ,KAAK,WAAW,SAACC,GAChBb,QAAQC,IAAIY,MAXP,OAGHC,EAHG,OAaTd,QAAQC,IAAIa,GAbH,gDAeTd,QAAQC,IAAR,MAfS,yDAAH,qDAuCV,OApBAc,qBAAU,WACJjB,EAAUkB,aACZnB,MAED,IAEHkB,qBAAU,WAAM,4CACd,8BAAAZ,EAAA,yDACOL,EAAUmB,YADjB,uDAE0B,6CAClBC,EAAI,IAAIpB,EAAUqB,KAAKC,IAAIC,SAASC,EADlB,8CAExBtB,QAAQC,IAAIiB,GAJd,SAK4BA,EAAEb,QAAQZ,cAAc8B,OALpD,OAKQ9B,EALR,OAMEC,EAAeD,GAEfD,EAAY0B,GARd,6CADc,uBAAC,WAAD,wBAWdM,KACC,CAAC1B,EAAUmB,cAGZ,sBAAKQ,UAAU,MAAf,UACE,mDACA,4BACI3B,EAAUmB,YAGVnB,EAAUM,QAAQ,GAFlB,wBAAQsB,QAAS7B,EAAjB,8BAKHN,EACC,4BACE,wBAAQmC,QAASxB,EAAjB,oBAEA,KAEHT,EAAc,8BAAIA,EAAJ,WAA4B,QC/DjD,IAAMkC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,wBAAD,UACE,cAAC,aAAD,UACE,cAAC1C,EAAD,QAGJsC,K","file":"static/js/main.0fbc4ef1.chunk.js","sourcesContent":["import \"./styles.css\";\nimport Web3 from \"web3\";\nimport ABI from \"./ABI\";\nimport { useEffect, useState } from \"react\";\nimport { useMetamask } from \"use-metamask\";\n\nexport default function App() {\n  const [contract, setContract] = useState();\n  const [totalSupply, setTotalSupply] = useState();\n  const { connect: metaConnect, metaState } = useMetamask();\n  const connect = () => {\n    metaConnect(Web3);\n  };\n  console.log(metaState);\n  const mint = async () => {\n    try {\n      console.log(metaState.account[0]);\n      const res = await contract.methods\n        .mint(1)\n        .send({\n          type: \"0x2\",\n          value: Web3.utils.toWei(\"0.09\", \"ether\"),\n          from: metaState.account[0]\n        })\n        .once(\"receipt\", (val) => {\n          console.log(val);\n        });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (metaState.isAvailable) {\n      connect();\n    }\n  }, []);\n\n  useEffect(() => {\n    async function run() {\n      if (!metaState.isConnected) return;\n      const contractAddress = \"0x2ea648b73209817f48c3bb6bc8f28122c2aa27bd\";\n      const c = new metaState.web3.eth.Contract(ABI, contractAddress);\n      console.log(c);\n      const totalSupply = await c.methods.totalSupply().call();\n      setTotalSupply(totalSupply);\n\n      setContract(c);\n    }\n    run();\n  }, [metaState.isConnected]);\n\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <p>\n        {!metaState.isConnected ? (\n          <button onClick={connect}>Connect Wallet</button>\n        ) : (\n          metaState.account[0]\n        )}\n      </p>\n      {contract ? (\n        <p>\n          <button onClick={mint}>Mint</button>\n        </p>\n      ) : null}\n\n      {totalSupply ? <p>{totalSupply}/1000</p> : null}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MetamaskStateProvider } from \"use-metamask\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <MetamaskStateProvider>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </MetamaskStateProvider>,\n  rootElement\n);\n"],"sourceRoot":""}